Rust 编译失败:
error[E0432]: unresolved import `libc`
 --> D:\code\rscode\C_Rust_BETA\temp_main.rs:4:5
  |
4 | use libc::setlocale;
  |     ^^^^ maybe a missing crate `libc`?
  |
  = help: consider adding `extern crate libc` to use the `libc` crate

warning: unused import: `std::os::raw::c_char`
 --> D:\code\rscode\C_Rust_BETA\temp_main.rs:3:5
  |
3 | use std::os::raw::c_char;
  |     ^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

error[E0308]: mismatched types
  --> D:\code\rscode\C_Rust_BETA\temp_main.rs:37:16
   |
37 |         t[i] = 51 - i;
   |         ----   ^^^^^^ expected `i32`, found `usize`
   |         |
   |         expected due to the type of this binding

error[E0308]: arguments to this method are incorrect
   --> D:\code\rscode\C_Rust_BETA\temp_main.rs:41:11
    |
41  |         t.swap(i, j);
    |           ^^^^ -  - expected `usize`, found `i32`
    |                |
    |                expected `usize`, found `i32`
    |
note: method defined here
   --> C:\Users\wang\.rustup\toolchains\stable-x86_64-pc-windows-msvc\lib/rustlib/src/rust\library\core\src\slice\mod.rs:904:18
    |
904 |     pub const fn swap(&mut self, a: usize, b: usize) {
    |                  ^^^^
help: you can convert an `i32` to a `usize` and panic if the converted value doesn't fit
    |
41  |         t.swap(i.try_into().unwrap(), j);
    |                 ++++++++++++++++++++
help: you can convert an `i32` to a `usize` and panic if the converted value doesn't fit
    |
41  |         t.swap(i, j.try_into().unwrap());
    |                    ++++++++++++++++++++

error[E0433]: failed to resolve: use of undeclared crate or module `libc`
  --> D:\code\rscode\C_Rust_BETA\temp_main.rs:54:19
   |
54 |         setlocale(libc::LC_ALL, CString::new("").unwrap().as_ptr());
   |                   ^^^^ use of undeclared crate or module `libc`

error: aborting due to 4 previous errors; 1 warning emitted

Some errors have detailed explanations: E0308, E0432, E0433.
For more information about an error, try `rustc --explain E0308`.
