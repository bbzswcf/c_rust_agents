编译错误: warning: unused import: `std::fs::File`
 --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:1:5
  |
1 | use std::fs::File;
  |     ^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::ptr`
 --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:3:5
  |
3 | use std::ptr;
  |     ^^^^^^^^

error[E0615]: attempted to take value of method `put` on type `&mut dyn StreamImpl`
  --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:65:10
   |
65 |     (out.put)(out, 128 + len as i32);
   |          ^^^ method, not a field
   |
help: remove wrapping parentheses to call the method
   |
65 -     (out.put)(out, 128 + len as i32);
65 +     out.put(out, 128 + len as i32);
   |

error[E0615]: attempted to take value of method `put` on type `&mut dyn StreamImpl`
  --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:67:14
   |
67 |         (out.put)(out, buf[i] as i32);
   |              ^^^ method, not a field
   |
help: remove wrapping parentheses to call the method
   |
67 -         (out.put)(out, buf[i] as i32);
67 +         out.put(out, buf[i] as i32);
   |

error[E0615]: attempted to take value of method `get` on type `&mut dyn StreamImpl`
  --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:78:28
   |
78 |         let c = (in_stream.get)(in_stream);
   |                            ^^^ method, not a field
   |
help: remove wrapping parentheses to call the method
   |
78 -         let c = (in_stream.get)(in_stream);
78 +         let c = in_stream.get(in_stream);
   |

error[E0615]: attempted to take value of method `put` on type `&mut dyn StreamImpl`
  --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:93:29
   |
93 |                 (out_stream.put)(out_stream, if end { len as i32 } else { (len - 1) as i32 });
   |                             ^^^ method, not a field
   |
help: remove wrapping parentheses to call the method
   |
93 -                 (out_stream.put)(out_stream, if end { len as i32 } else { (len - 1) as i32 });
93 +                 out_stream.put(out_stream, if end { len as i32 } else { (len - 1) as i32 });
   |

error[E0615]: attempted to take value of method `put` on type `&mut dyn StreamImpl`
  --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:94:29
   |
94 |                 (out_stream.put)(out_stream, buf[0] as i32);
   |                             ^^^ method, not a field
   |
help: remove wrapping parentheses to call the method
   |
94 -                 (out_stream.put)(out_stream, buf[0] as i32);
94 +                 out_stream.put(out_stream, buf[0] as i32);
   |

error[E0308]: mismatched types
   --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:103:30
    |
103 |                     buf[0] = buf[1] = buf[len - 1];
    |                     ------   ^^^^^^^^^^^^^^^^^^^^^ expected `u8`, found `()`
    |                     |
    |                     expected due to the type of this binding

error[E0615]: attempted to take value of method `put` on type `&mut dyn StreamImpl`
   --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:115:17
    |
115 |     (out_stream.put)(out_stream, -1);
    |                 ^^^ method, not a field
    |
help: remove wrapping parentheses to call the method
    |
115 -     (out_stream.put)(out_stream, -1);
115 +     out_stream.put(out_stream, -1);
    |

error[E0615]: attempted to take value of method `get` on type `&mut dyn StreamImpl`
   --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:120:28
    |
120 |         let c = (in_stream.get)(in_stream);
    |                            ^^^ method, not a field
    |
help: remove wrapping parentheses to call the method
    |
120 -         let c = (in_stream.get)(in_stream);
120 +         let c = in_stream.get(in_stream);
    |

error[E0615]: attempted to take value of method `get` on type `&mut dyn StreamImpl`
   --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:127:36
    |
127 |                 let c = (in_stream.get)(in_stream);
    |                                    ^^^ method, not a field
    |
help: remove wrapping parentheses to call the method
    |
127 -                 let c = (in_stream.get)(in_stream);
127 +                 let c = in_stream.get(in_stream);
    |

error[E0615]: attempted to take value of method `put` on type `&mut dyn StreamImpl`
   --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:128:29
    |
128 |                 (out_stream.put)(out_stream, c);
    |                             ^^^ method, not a field
    |
help: remove wrapping parentheses to call the method
    |
128 -                 (out_stream.put)(out_stream, c);
128 +                 out_stream.put(out_stream, c);
    |

error[E0615]: attempted to take value of method `get` on type `&mut dyn StreamImpl`
   --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:132:32
    |
132 |             let c = (in_stream.get)(in_stream);
    |                                ^^^ method, not a field
    |
help: remove wrapping parentheses to call the method
    |
132 -             let c = (in_stream.get)(in_stream);
132 +             let c = in_stream.get(in_stream);
    |

error[E0615]: attempted to take value of method `put` on type `&mut dyn StreamImpl`
   --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:134:29
    |
134 |                 (out_stream.put)(out_stream, c);
    |                             ^^^ method, not a field
    |
help: remove wrapping parentheses to call the method
    |
134 -                 (out_stream.put)(out_stream, c);
134 +                 out_stream.put(out_stream, c);
    |

error[E0308]: mismatched types
   --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:143:14
    |
143 |         get: StreamImpl::get,
    |              ^^^^^^^^^^^^^^^ one type is more general than the other
    |
    = note: expected fn pointer `for<'a> fn(&'a mut (dyn StreamImpl + 'a)) -> _`
                  found fn item `for<'a> fn(&'a mut _) -> _ {<_ as StreamImpl>::get}`

error[E0308]: mismatched types
   --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:144:14
    |
144 |         put: StreamImpl::put,
    |              ^^^^^^^^^^^^^^^ one type is more general than the other
    |
    = note: expected fn pointer `for<'a> fn(&'a mut (dyn StreamImpl + 'a), _) -> _`
                  found fn item `for<'a> fn(&'a mut _, _) -> _ {<_ as StreamImpl>::put}`

error[E0308]: mismatched types
   --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:149:14
    |
149 |         get: StreamImpl::get,
    |              ^^^^^^^^^^^^^^^ one type is more general than the other
    |
    = note: expected fn pointer `for<'a> fn(&'a mut (dyn StreamImpl + 'a)) -> _`
                  found fn item `for<'a> fn(&'a mut _) -> _ {<_ as StreamImpl>::get}`

error[E0308]: mismatched types
   --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:150:14
    |
150 |         put: StreamImpl::put,
    |              ^^^^^^^^^^^^^^^ one type is more general than the other
    |
    = note: expected fn pointer `for<'a> fn(&'a mut (dyn StreamImpl + 'a), _) -> _`
                  found fn item `for<'a> fn(&'a mut _, _) -> _ {<_ as StreamImpl>::put}`

error[E0308]: mismatched types
   --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:155:14
    |
155 |         get: StreamImpl::get,
    |              ^^^^^^^^^^^^^^^ one type is more general than the other
    |
    = note: expected fn pointer `for<'a> fn(&'a mut (dyn StreamImpl + 'a)) -> _`
                  found fn item `for<'a> fn(&'a mut _) -> _ {<_ as StreamImpl>::get}`

error[E0308]: mismatched types
   --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:156:14
    |
156 |         put: StreamImpl::put,
    |              ^^^^^^^^^^^^^^^ one type is more general than the other
    |
    = note: expected fn pointer `for<'a> fn(&'a mut (dyn StreamImpl + 'a), _) -> _`
                  found fn item `for<'a> fn(&'a mut _, _) -> _ {<_ as StreamImpl>::put}`

error: aborting due to 18 previous errors; 2 warnings emitted

Some errors have detailed explanations: E0308, E0615.
For more information about an error, try `rustc --explain E0308`.
