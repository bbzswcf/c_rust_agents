编译错误: error[E0308]: mismatched types
  --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:82:20
   |
82 |             if i < self.ival - 1 {
   |                -   ^^^^^^^^^^^^^ expected `usize`, found `i32`
   |                |
   |                expected because this is `usize`
   |
help: you can convert an `i32` to a `usize` and panic if the converted value doesn't fit
   |
82 |             if i < (self.ival - 1).try_into().unwrap() {
   |                    +             +++++++++++++++++++++

warning: value assigned to `ret` is never read
  --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:25:17
   |
25 |         let mut ret = None;
   |                 ^^^
   |
   = help: maybe it is overwritten before being read?
   = note: `#[warn(unused_assignments)]` on by default

error: lifetime may not live long enough
  --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:37:25
   |
24 |     fn from_string(s: &str, e: &mut Option<&str>, parent: Option<&mut Box<List>>) -> Box<List> {
   |                       -                    - let's call the lifetime of this reference `'2`
   |                       |
   |                       let's call the lifetime of this reference `'1`
...
37 |                         *e = chars.as_str();
   |                         ^^^^^^^^^^^^^^^^^^^ assignment requires that `'1` must outlive `'2`
   |
help: consider introducing a named lifetime parameter and update trait if needed
   |
24 |     fn from_string<'a>(s: &'a str, e: &mut Option<&'a str>, parent: Option<&mut Box<List>>) -> Box<List> {
   |                   ++++     ++                      ++

error[E0596]: cannot borrow `ret` as mutable, as it is not declared as mutable
  --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:48:66
   |
48 |                         List::from_string(new_s, &mut None, Some(&mut ret));
   |                                                                  ^^^^^^^^ cannot borrow as mutable
   |
note: the binding is already a mutable borrow
  --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:43:33
   |
43 |                     if let Some(ret) = ret.as_mut() {
   |                                 ^^^
help: try removing `&mut` here
   |
48 -                         List::from_string(new_s, &mut None, Some(&mut ret));
48 +                         List::from_string(new_s, &mut None, Some(ret));
   |

error[E0594]: cannot assign to `*t`, as `t` is not declared as mutable
  --> C:\Users\muzhi\Desktop\C_Rust_BETA\temp_main.rs:98:13
   |
98 |             *t = self.clone();
   |             ^^ cannot assign
   |
help: consider changing this to be mutable
   |
97 |             let mut t = List::new_list();
   |                 +++

error: aborting due to 4 previous errors; 1 warning emitted

Some errors have detailed explanations: E0308, E0594, E0596.
For more information about an error, try `rustc --explain E0308`.
